version: '3.8'

services:
  # Redis for BullMQ job queue
  redis:
    image: redis:7-alpine
    container_name: downloadarr-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes

  # PostgreSQL database (optional, for future use)
  postgres:
    image: postgres:15-alpine
    container_name: downloadarr-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: downloadarr
      POSTGRES_USER: downloadarr
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-downloadarr}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # NestJS API Server
  api:
    build:
      context: .
      dockerfile: packages/api/Dockerfile
    container_name: downloadarr-api
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: production
      PORT: 3001
      REDIS_HOST: redis
      REDIS_PORT: 6379
      DATABASE_URL: postgresql://downloadarr:${POSTGRES_PASSWORD:-downloadarr}@postgres:5432/downloadarr
      VPN_ENABLED: ${VPN_ENABLED:-false}
      VPN_CONFIG_PATH: ${VPN_CONFIG_PATH:-/app/vpn/config.ovpn}
      DOWNLOAD_PATH: /downloads
      JACKETT_URL: http://jackett:9117
      JACKETT_API_KEY: ${JACKETT_API_KEY}
    volumes:
      - downloads:/downloads
      - ./vpn-configs:/app/vpn:ro
    depends_on:
      - redis
      - postgres
    networks:
      - downloadarr

  # React Frontend
  frontend:
    build:
      context: .
      dockerfile: packages/ui/Dockerfile
    container_name: downloadarr-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      VITE_API_URL: http://localhost:3001
    depends_on:
      - api
    networks:
      - downloadarr

  # Jackett for torrent indexing
  jackett:
    image: lscr.io/linuxserver/jackett:latest
    container_name: downloadarr-jackett
    restart: unless-stopped
    environment:
      PUID: 1000
      PGID: 1000
      TZ: ${TZ:-UTC}
      AUTO_UPDATE: true
    ports:
      - "9117:9117"
    volumes:
      - jackett_config:/config
      - downloads:/downloads
    networks:
      - downloadarr

  # Aria2c for downloading
  aria2:
    image: p3terx/aria2-pro:latest
    container_name: downloadarr-aria2
    restart: unless-stopped
    environment:
      PUID: 1000
      PGID: 1000
      UMASK_SET: 022
      RPC_SECRET: ${ARIA2_RPC_SECRET:-downloadarr}
      RPC_PORT: 6800
      LISTEN_PORT: 6888
      DISK_CACHE: 64M
      IPV6_MODE: false
      UPDATE_TRACKERS: true
      CUSTOM_TRACKER_URL: ""
      TZ: ${TZ:-UTC}
    ports:
      - "6800:6800"  # RPC port
      - "6888:6888"  # BT listen port
    volumes:
      - aria2_config:/config
      - downloads:/downloads
    networks:
      - downloadarr

  # AriaNG Web UI for Aria2
  ariang:
    image: p3terx/ariang:latest
    container_name: downloadarr-ariang
    restart: unless-stopped
    ports:
      - "6880:6880"
    command: --port 6880 --ipv6
    networks:
      - downloadarr

volumes:
  redis_data:
  postgres_data:
  jackett_config:
  aria2_config:
  downloads:

networks:
  downloadarr:
    driver: bridge
